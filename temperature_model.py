# -*- coding: utf-8 -*-
"""temperature model

Automatically generated by Colaboratory.

Original file is located at
    https://colab.research.google.com/drive/1yZeiXM5KTd5SNQl7pIhjcWM2i8_4Gktg
"""

import tensorflow as tf
import numpy as np
from google.colab import output

celsius_q    = np.array([-40, -10, 0,  8,  15, 22, 38], dtype=float)
fahrenheit_a = np.array([-40,  14, 32, 46, 59, 72, 100], dtype=float)
for i,c in enumerate(celsius_q):
  print("{} degree celsius = {} degree Fahrenheit".format(c, fahrenheit_a[i]))

l0 = tf.keras.layers.Dense(units=1, input_shape=[1]) 
model = tf.keras.Sequential([l0])
model.compile(loss = 'mean_squared_error', optimizer = tf.keras.optimizers.Adam(0.1))
history = model.fit(celsius_q, fahrenheit_a, epochs=500, verbose=False)
print("Done")

import matplotlib.pyplot as plt

plt.xlabel("Epoch number")
plt.ylabel("loss magnitude")
plt.plot(history.history['loss'])

print(model.predict([100.0]))

print("these are layer variables: {}".format(l0.get_weights()))

